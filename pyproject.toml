[build-system]
requires = [
    "pdm-backend>=2.1.0,<3.0.0",
    "setuptools>=67.0.0,<69.0.0",
    "wheel",
    "toml"
]
build-backend = "pdm.backend"

[project]
name = "douceville"
dynamic = ["version"]
description = ""
authors = [
    { name = "Yann de ThÃ©", email = "yann@gmail.com" },
]
dependencies = [
    # Requirements dated 30/01/2021
    "cryptography",
    "email-validator",
    "flask",
    "flask-admin",
    "flask-alembic",
    "flask-bcrypt",
    "flask-bootstrap",
    "flask-login",
    "flask-mail",
    "flask-migrate",
    "flask-sqlalchemy",
    "flask-wtf",
    "GeoAlchemy2",
    "geojson",
    "itsdangerous",
    "jinja2",
    "markupsafe>=3.0.2",
    "openpyxl",
    "openrouteservice",
    "psycopg2-binary",
    "pyopenssl",
    "python-slugify",
    # "PyYaml",
    "rdflib",
    "rdfpandas",
    "rich",
    "shapely",
    "sqlalchemy",
    "stripe",
    "typer>=0.13.1",
    "werkzeug",
    "wtforms",
    "xlrd",
    "flask-nav3>=0.7.2",
    "pydantic-settings>=2.6.1",
    "logfire>=2.3.0",
    "waitress>=3.0.2",
    "requests>=2.32.3",
    "pydantic>=2.9.2",
]
requires-python = ">=3.10,<3.12"

[project.urls]
"Bug Tracker" = "https://gitlab.com/ydethe/douceville/-/issues"
Homepage = "https://gitlab.com/ydethe/douceville"
Source = "https://gitlab.com/ydethe/douceville"

[tool.pylint.format]
max-line-length = 100

[tool.black]
line-length = 100
target-version = ['py38']

[tool.pdm.version]
source = "scm"

[tool.pdm.build]
includes = [
    "douceville/",
]
excludes = [
    "tests",
    "build",
    "dist",
]

[tool.pdm.dev-dependencies]
doc = [
    "pdoc3",
    "pylint",
]
test = [
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "pytest-mock",
    "pytest-instafail",
    "pytest-picked",
    "pytest-sugar",
    "pytest-html",
]

[tool.pdm.scripts]
site_packages = true
test.shell = """\
    mkdir -p build/htmldoc/tests
    pytest --html=build/htmldoc/tests/report.html --self-contained-html --junitxml=build/junit.xml --cov-config=.coveragerc --cov douceville tests --doctest-modules douceville
    coverage html -d build/htmldoc/coverage
"""
doc.shell = """\
    mkdir -p build/htmldoc/douceville
    mkdir -p build/htmldoc/examples
    python -m ipykernel install --user
    python examples/__init__.py
    cp examples/quadcopter.png build/htmldoc/examples
    pdoc --html --force --config latex_math=True --template-dir dev/template -o build/htmldoc douceville examples
    pyreverse -s0 douceville -k --colorized -p douceville -m no --ignore=exceptions.py,LogFormatter.py,CSVLogger.py,PickleLogger.py,XlsLogger.py -d build/htmldoc
    dot -Tpng build/htmldoc/classes_douceville.dot -o build/htmldoc/douceville/classes.png
"""
[project.scripts]
maillage = "douceville.scripts.import_etablissements:import_main"
conv_geoloc_enseignement = "douceville.scripts.conv_geoloc_enseignement:conv_geoloc_enseignement_main"
conv_rdf = "douceville.scripts.conv_rdf:conv_rdf_main"
dv_users = "douceville.blueprints.users.manage_users:add_user_main"


[dependency-groups]
dev = [
    "ipython",
    "black",
    "pandas",
    "pre-commit>=4.0.1",
]
doc = [
    "pdoc3",
    "pylint",
]
test = [
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "pytest-mock",
    "pytest-instafail",
    "pytest-picked",
    "pytest-sugar",
    "pytest-html",
]
